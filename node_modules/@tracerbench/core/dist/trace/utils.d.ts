import { HierarchyNode } from 'd3-hierarchy';
import { ICpuProfileNode, Trace } from '../trace';
import { ModuleMatcher } from './module-matcher';
export interface ICategories {
    [key: string]: ILocator[];
}
export interface ILocator {
    functionName: string;
    functionNameRegex: RegExp;
    moduleName: string;
    moduleNameRegex: RegExp;
}
export declare const AUTO_ADD_CAT = "Auto Added Module Paths";
export declare function getRenderingNodes(root: HierarchyNode<ICpuProfileNode>): Array<HierarchyNode<ICpuProfileNode>>;
export declare function filterObjectByKeys(obj: {
    [key: string]: any;
}, keyArray: string[]): {
    [key: string]: any;
};
export declare function computeMinMax(trace: Trace, start: string | undefined, end: string): {
    min: number;
    max: number;
};
/**
 * This will add all module paths to locators/categories, except for those already matched by
 * user provided heuristic config entries which specify a non-".*" module name regex.
 */
export declare function addRemainingModules(locators: ILocator[], categories: ICategories, modMatcher: ModuleMatcher): void;
export declare function methodsFromCategories(categories: ICategories): ILocator[];
export declare function toRegex(locators: ILocator[]): RegExp[];
export declare function formatCategories(report: string | undefined, methods: string[]): {
    [key: string]: any;
};
export declare function wait(dur: number): Promise<unknown>;
export declare function getBrowserArgs(explictArgs?: string[]): string[];
//# sourceMappingURL=utils.d.ts.map